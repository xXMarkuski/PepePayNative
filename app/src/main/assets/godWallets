1,2wk(orO0ABXNyABNqYXZhLnV0aWwuQXJyYXlMaXN0eIHSHZnHYZ0DAAFJAARzaXpleHAAAAAHdwQAAAAHdAGITUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF0RllRVmxWcmhBbHN6MnRHYjJBd0EyL05KWkQzbmR3RytqSXhLaFUrNC83Zm93Sk5Vd0k3R3FiOUkzdkdrQmhXRHhHSHZtcmpCL2FnNUhOd3BOMldVNlZ0M2EzNTRqcXptbE80UDlHWkx5d2pZT3htVHRtTVkyWW9VTzJtQnIrdmpCSWo3TmVTQlF1MC95WmRBMGgvRTA4bWxiMnpUbllZeUZyaFdEUURRMWE4NHdqd0NYeGN2VGNDMDYvb05wWnY2WncxNWpDRWhZWEh1WGJRam44bDA1S2VQM21PdVIxSi9sallnQmxBMzBkaVRyWTdNaVJlWXlMWkRYTlBYZGIycjZ5Qzk5QWNwNldxTkdEZ0pWSTBEV0N5ZTBwS3hlRjFSdFlqZGZ5ZDNSd2RJZE5iYXBwNTFkZ2FianNTeTh5THEvZmdOK3Q1RzBEZW5pY0pCWTVYbVFJREFRQUJ0AYhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXFuN0wvK3ZQN1JNM280eWpoV1EybWFGdEs2ODA0U3RQS05GTGxTNmVSdENEc3lzSTBobUFLWDJTVU82R1RBYmMyK2hDanV1OWh2NjM1WGgvWC9menFNZkFxa1c2dElHWTQ2eXYwbVBSQUVGREdyYnhmYWJ3aG9ob1dXS2FXamo0ZHh1NzFaMkhpdjI1NjFwMmxZZ1lYY2xlY0JQY0FJV0FhWEE2cFI3aHl5TVNXWHd5eExHSUluWERSQXpnbThzS1QwdDlabFdpTnBYd1lYSldPTlk1M3lyWGtLejdHc09ZNHloZkZJWG01L0VDbGxsd2Izc2krWHlBejErQTRPcVVNbTU2aU9HQWdLVy8yV0Q0Ry81WmpabWJEV2JuMnhralBDeEFyVDkwbVZ3TGxHeWRhVERELy9KcHlCOXMvS3hqLzhuZm1sQ1pXMmlKT0FsWG1vVEs3d0lEQVFBQnQBiE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBNmJQL3ZMRGU2TUpjb2VxT3dJbk9NN3BsZU5qUjR3bksyelZ1RmtibDZyaHRMcXpFWTA2ZStMcklRWndUaG1QYWRXWFFlc25vN3BNRzlKVXF1Z3NHS0VFdnRtMHQ4MldiNEttNENVVkJSOWhSWXBTWFdDWXFDaFliVWtzblFXdDNhellyNDlERlUzWXkxcHNESWNVSFVEaUdTWkFGSEdOT3VYZksvRlFrcVhKd0lFT2RlTHVEdUxqbC91TWgxQUozVXVXaWJ5Ylh5MEZzSzgxbHpPbGE4TWNXUFJVM3ZBQTJtTFpIREp5WDdZeFZZbVgweUtZTU9ZOTUyQUJFVFF3dXNNWm9TdVhROE5Vd1JFczhmS2VJMEJmRk5QK1FMTDBaTzVhWDYwQmVmQ3RnSGJ2TU5odmQ3eUoyZUVCS3g3dGpxVU03aVhzTVUxQnFCLzh0WXhHSURRSURBUUFCdAGITUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF0RllRVmxWcmhBbHN6MnRHYjJBd0EyL05KWkQzbmR3RytqSXhLaFUrNC83Zm93Sk5Vd0k3R3FiOUkzdkdrQmhXRHhHSHZtcmpCL2FnNUhOd3BOMldVNlZ0M2EzNTRqcXptbE80UDlHWkx5d2pZT3htVHRtTVkyWW9VTzJtQnIrdmpCSWo3TmVTQlF1MC95WmRBMGgvRTA4bWxiMnpUbllZeUZyaFdEUURRMWE4NHdqd0NYeGN2VGNDMDYvb05wWnY2WncxNWpDRWhZWEh1WGJRam44bDA1S2VQM21PdVIxSi9sallnQmxBMzBkaVRyWTdNaVJlWXlMWkRYTlBYZGIycjZ5Qzk5QWNwNldxTkdEZ0pWSTBEV0N5ZTBwS3hlRjFSdFlqZGZ5ZDNSd2RJZE5iYXBwNTFkZ2FianNTeTh5THEvZmdOK3Q1RzBEZW5pY0pCWTVYbVFJREFRQUJ0AYhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXFuN0wvK3ZQN1JNM280eWpoV1EybWFGdEs2ODA0U3RQS05GTGxTNmVSdENEc3lzSTBobUFLWDJTVU82R1RBYmMyK2hDanV1OWh2NjM1WGgvWC9menFNZkFxa1c2dElHWTQ2eXYwbVBSQUVGREdyYnhmYWJ3aG9ob1dXS2FXamo0ZHh1NzFaMkhpdjI1NjFwMmxZZ1lYY2xlY0JQY0FJV0FhWEE2cFI3aHl5TVNXWHd5eExHSUluWERSQXpnbThzS1QwdDlabFdpTnBYd1lYSldPTlk1M3lyWGtLejdHc09ZNHloZkZJWG01L0VDbGxsd2Izc2krWHlBejErQTRPcVVNbTU2aU9HQWdLVy8yV0Q0Ry81WmpabWJEV2JuMnhralBDeEFyVDkwbVZ3TGxHeWRhVERELy9KcHlCOXMvS3hqLzhuZm1sQ1pXMmlKT0FsWG1vVEs3d0lEQVFBQnQBiE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBNmJQL3ZMRGU2TUpjb2VxT3dJbk9NN3BsZU5qUjR3bksyelZ1RmtibDZyaHRMcXpFWTA2ZStMcklRWndUaG1QYWRXWFFlc25vN3BNRzlKVXF1Z3NHS0VFdnRtMHQ4MldiNEttNENVVkJSOWhSWXBTWFdDWXFDaFliVWtzblFXdDNhellyNDlERlUzWXkxcHNESWNVSFVEaUdTWkFGSEdOT3VYZksvRlFrcVhKd0lFT2RlTHVEdUxqbC91TWgxQUozVXVXaWJ5Ylh5MEZzSzgxbHpPbGE4TWNXUFJVM3ZBQTJtTFpIREp5WDdZeFZZbVgweUtZTU9ZOTUyQUJFVFF3dXNNWm9TdVhROE5Vd1JFczhmS2VJMEJmRk5QK1FMTDBaTzVhWDYwQmVmQ3RnSGJ2TU5odmQ3eUoyZUVCS3g3dGpxVU03aVhzTVUxQnFCLzh0WXhHSURRSURBUUFCdAGITUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEyQUlJcnVWRjJpSUNCdjN3SndUMWlxbFFVbjhJOENrZmhFY0ZMOUFmc1ZYazdiY2xOdkpseUc4d3c5cVR2ZnNXR0VnZlFjV3B0YkhydkEzbndkSnVaOFNCcU1rSENyUFdPQnprQzRwbXhvNEFXbkxQSGZFcjZLc0xJV2FEUDRHQUZMTFlXTVI3c3ZaSmZVRDBubGc4SndGU2hoRUpqa1FNMytseVV6WUdRTVZPRGRZLytJY2dvbEViT3hYSVQ3YUJSb0lNZlVTaUlGNWlKdDE4NzRzVlpJckt1VWtOaDBnMFpsTVRNU1ZnY0p6Y3ZDMnR2OXIyMEFrVFpyTmM1NVBUZEtuZTFWNHB5aTdMT2VjZlNJMDcrL3VmMnFOdWs0bmQva2toNFZON29ITVFrQ09BRnRhVURJMXBRbFBrRXV6a21GUHJIb3E3bXV2WUxqeWo2QTFxK3dJREFRQUJ4)